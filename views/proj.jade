extends layout

append head
  title #{kind}/#{proj} - Didit

block content
  div.span3
    include sidebar
  div.span9
    div.page-header
      h1
        tt #{kind}/#{proj}
    
    form#create-repo.modal.hide.form-horizontal(data-kind=kind, data-proj=proj, method='post', tabindex='-1')
      div.modal-header
        a.close(data-dismiss='modal') &times;
        h3 Create repository
      div.modal-body
        h4 Create a new&nbsp;
          tt #{kind}/#{proj}
          |  repository for&nbsp;
          tt.create-repo-users-text
          | .
      div.modal-footer
        a.btn(href='#', data-dismiss='modal') Cancel
        button.btn.btn-info(disabled=true) Create #{kind}/#{proj} for&nbsp;
          span.create-repo-users-text
    
    if authstaff
      
      form#create-starting.modal.hide.form-horizontal(action="/starting/#{kind}/#{proj}", method='post', tabindex='-1')
        div.modal-header
          a.close(data-dismiss='modal') &times;
          h3 Create starting repository
        div.modal-body
          p Create a starting repository based on the current staff repository.
          p
            a(href='#create-tickets' data-toggle='modal' data-dismiss='modal') Students with a ticket
            |  will be able to create a repository after the&nbsp;
            a(href='#release' data-toggle='modal' data-dismiss='modal') assignment is released
            | .
        div.modal-footer
          a.btn(href='#', data-dismiss='modal') Cancel
          button.btn.btn-info Create #{kind}/#{proj} starting repo
      
      form#create-tickets.modal.hide.form-forizontal(action="/tickets/#{kind}/#{proj}", method='post', tabindex='-1')
        div.modal-header
          a.close(data-dismiss='modal') &times;
          h3 Add tickets
        div.modal-body
          p #{tickets.length || 'No'} existing self-service repository creation ticket#{tickets.length == 1 ? '' : 's'} for&nbsp;
            tt #{kind}/#{proj}
            | #{tickets.length == 0 ? '.' : ':'}
            if tickets.length == 0
              br
              | (Staff can always create a repository.)
          ul.inline
            each ticket in tickets
              li= ticket.users.join('-')
          label(for='ticket-usernames') List usernames or dash-separated groups to add:
          textarea#ticket-usernames.span8.teletype(rows=10, name='usernames')
        div.modal-footer
          a.btn(href='#', data-dismiss='modal') Cancel
          button.btn.btn-info Add tickets for #{kind}/#{proj}
      
      form#release.modal.hide.form-forizontal(action="/release/#{kind}/#{proj}", method='post', tabindex='-1')
        div.modal-header
          a.close(data-dismiss='modal') &times;
          h3 Confirm assignment release
        div.modal-body
          p
            a(href='#create-tickets' data-toggle='modal' data-dismiss='modal') Students with a ticket
            |  will be able to create an assignment repository.
          if ! starting
            p Requires a&nbsp;
              a(href='#create-starting' data-toggle='modal' data-dismiss='modal') starting repository
              | .
        div.modal-footer
          a.btn(href='#', data-dismiss='modal') Cancel
          button.btn.btn-info(disabled= ! starting) Release #{kind}/#{proj}
      
      form#confirm-sweep.modal.hide.form-horizontal(action="/sweep/#{kind}/#{proj}", method='post', tabindex='-1')
        div.modal-header
          a.close(data-dismiss='modal') &times;
          h3 Confirm sweep
        div.modal-body
          p Record repository revisions and ensure that they have up-to-date builds.
          div.control-group
            label.control-label(for='sweep-date') Record revisions as of:
            div.controls
              input#sweep-date.input-medium(type='date', name='date', value="#{moment().format('YYYY-MM-DD')}")
              | &nbsp;
              input#sweep-time.input-medium(type='time', name='time', value="#{moment().format('HH:mm')}")
        div.modal-footer
          a.btn(href='#', data-dismiss='modal') Cancel
          button.btn.btn-info Sweep #{kind}/#{proj}
      
      form#confirm-catchup.modal.hide.form-horizontal(action="/catchup/#{kind}/#{proj}", method='post', tabindex='-1')
        div.modal-header
          a.close(data-dismiss='modal') &times;
          h3 Confirm catch-up
        div.modal-body
          p Schedule builds for all project repositories, but do not record a sweep.
          div.control-group
            label.control-label(for='catchup-hours') Build over the next:
            div.controls
              div.input-append
                input#catchup-hours.input-mini(type='number', name='hours', value='24', min='1', max='240')
                span.add-on hours
        div.modal-footer
          a.btn(href='#', data-dismiss='modal') Cancel
          button.btn.btn-info Catch-up #{kind}/#{proj}
      
      form#create-milestone.modal.hide.form-horizontal(action="/milestone/#{kind}/#{proj}", method='post', tabindex='-1')
        div.modal-header
          a.close(data-dismiss='modal') &times;
          h3 Create milestone
        div.modal-body
          p Create a grading milestone.
          div.control-group
            label.control-label(for='milestone-name') Name:
            div.controls
              input#milestone-name(type='text', name='name', placeholder='e.g. "beta", "final"', pattern='\\w+')
        div.modal-footer
          a.btn(href='#', data-dismiss='modal') Cancel
          button.btn.btn-info Create #{kind}/#{proj} milestone
      
      div.span6.pull-right
        div.well
          h3 Assignment
          if starting
            p: button.btn.btn-small.btn-success.disabled Starting repo exists
          else
            p: a.btn.btn-small.btn-info(href='#create-starting', data-toggle='modal') Create starting repo
          p
            span.badge(class="badge-#{tickets.length ? 'success' : 'default'}") #{tickets.length} ticket#{tickets.length == 1 ? '' : 's' }
            | &emsp;
            a.btn.btn-small(href='#create-tickets', data-toggle='modal', class=starting && ! tickets.length ? 'btn-info' : '') Add tickets
          if released
            p: button.btn.btn-small.btn-success.disabled Released to students
          else if starting
            p: a.btn.btn-small(href='#release', data-toggle='modal', class=starting && tickets.length ? 'btn-info' : '') Release to students
        div.well
          h3= sweeps.length + schedSweeps.length > 0 ? 'Sweeps' : 'No sweeps'
          each sweep in sweeps
            h4
              a(href="/sweep/#{sweep.kind}/#{sweep.proj}/#{sweep.when.format(moment.compactFormat)}").
                #{sweep.when.format('llll')}
          each sweep in schedSweeps
            h4.muted #{sweep.when.format('llll')}&nbsp;
              span.badge #{sweep.when.fromNow()}
          a.btn.btn-small.btn-info(href='#confirm-sweep', data-toggle='modal') New sweep
          a.btn.btn-small.pull-right(href='#confirm-catchup', data-toggle='modal') Catch-up
        div.well
          h3= milestones.length > 0 ? 'Milestones' : 'No milestones'
          each milestone in milestones
            h4
              a(href="/milestone/#{kind}/#{proj}/#{milestone.name}") #{milestone.name}
          a.btn.btn-small.btn-info(href='#create-milestone', data-toggle='modal') New milestone
    
    if myrepos.length == 0
      if released && startable.length > 0
        h2 Create a repository
        each repo in startable
          p: a(href='#create-repo', data-toggle='modal', data-users=repo.users.join('-')).btn.btn-info= repo.users.join('-')
      else if starting && authstaff
        h2 Create a repository
        p: a(href='#create-repo', data-toggle='modal', data-users=authuser).btn.btn-warning= authuser
      else if released
        h2.muted You cannot create a repository
    
    if authstaff
      h2= repos.length > 0 ? 'Repositories' : 'No repositories'
    else if repos.length > 0
      h2 My repositor#{repos.length == 1 ? 'y' : 'ies'}
    each repo in repos
      div.inline-header
        h3
          a(href="/#{repo.kind}/#{repo.proj}/#{repo.users.join('-')}")= repo.users.join('-')
          | &nbsp;
        span.muted= (repo.fullnames || []).filter(function(n) { return n; }).join(', ')
