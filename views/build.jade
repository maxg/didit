extends layout

append head
  title #{kind}/#{proj} - #{users.join('-')}@#{rev} - Didit

block content
  div.span3
    include sidebar
  div.span9
    div.page-header
      h1
        tt #{kind}/#{proj}
        |  by&nbsp;
        tt= users.join('-')
        |  rev&nbsp;
        tt= rev
      p.muted builder&nbsp;
        if build.builder
          tt= build.builder
        else
          span.label.label-warning unknown
        |  started #{locals.moment(build.started).calendar()}
        |  took #{moment.duration(build.finished - build.started).humanize()}

    if build.err
      div.alert.alert-error
        h2 Build error&nbsp;
          small= build.err.dmesg

    if authstaff && staffmode && build.json.hidden
      mixin testresults('Hidden tests', build.hidden, build.txt.hidden, build.json.hidden)

    mixin testresults('Public tests', build.public, build.txt.public, build.json.public)

    div.progress.progress-striped(class="progress-#{build.compile ? 'success' : 'danger'}")
      div.bar(style='width: 100%')
    div.alert(class="alert-#{build.compile ? 'success' : 'error'}")
      h2 Compilation #{build.compile ? 'succeeded' : 'FAILED'}
      if build.txt.compile
        pre.pre-scrollable= build.txt.compile
      else
        h3 No output

mixin testresults(title, success, output, results)
  if ( ! results) || (results.tests == 0)
    div.progress.progress-striped
      div.bar.bar-danger(style='width: 100%')
    div.alert.alert-error
      h2 #{title} FAILED TO RUN
      if output
        pre.pre-scrollable= output
  else
    div.progress.progress-striped
      - var ok = results.tests - results.failures - results.errors
      - var frac = results.tests == 0 ? 0 : Math.floor(ok / results.tests * 100);
      div.bar.bar-success(style="width: #{frac}%")
      div.bar.bar-danger(style="width: #{100 - frac}%")
    div.alert(class="alert-#{success ? 'success' : 'yellow'}")
      h2 #{title} #{success ? 'passed' : 'FAILED'}&nbsp;
        mixin testcounts(results)
      pre.pre-scrollable= output
      ul.testresults
        each suite in results.testsuites
          li
            mixin suiteresults(suite)

mixin suiteresults(suite)
  h3 #{suite.package}#{suite.package ? '.' : ''}#{suite.name}&nbsp;
    mixin testcounts(suite)
  p= suite.properties.desc
  ul
    each test in suite.testcases
      li
        if test.error
          span.label.label-info X
        else if test.failure
          span.label.label-important X
        else
          span.label.label-success &#x2713;
        h4 #{test.name} #{test.error ? 'ERROR' : ''}#{test.failure ? 'FAILED' : ''}
        p
        if test.error || test.failure
          pre.pre-scrollable= test.error || test.failure
  div.clearfix
    if suite.sysout && (suite.sysout.length > 1 || suite.syserr[0])
      pre.pull-left.pre-scrollable(style='width:45%')= suite.sysout.join('\n')
    if suite.syserr && (suite.syserr.length > 1 || suite.syserr[0])
      pre.pull-right.pre-scrollable.text-error(style='width:45%')= suite.syserr.join('\n')

mixin testcounts(counted)
  small #{counted.tests} test#{counted.tests == 1 ? '' : 's'},
    | #{counted.failures} failure#{counted.failures == 1 ? '' : 's'},
    | #{counted.errors} error#{counted.errors == 1 ? '' : 's'}
